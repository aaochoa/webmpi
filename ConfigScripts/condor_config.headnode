
######################################################################
##
##  condor_config
##
##  This is the global configuration file for condor. This is where
##  you define where the local config file is. Any settings
##  made here may potentially be overridden in the local configuration
##  file.  KEEP THAT IN MIND!  To double-check that a variable is
##  getting set from the configuration file that you expect, use
##  condor_config_val -v <variable name>
##
##  condor_config.annotated is a more detailed sample config file
##
##  Unless otherwise specified, settings that are commented out show
##  the defaults that are used if you don't define a value.  Settings
##  that are defined here MUST BE DEFINED since they have no default
##  value.
##
######################################################################

##  Where have you installed the bin, sbin and lib condor directories?   
RELEASE_DIR = /usr

##  Where is the local condor directory for each host?  This is where the 
#local config file(s), logs and
##  spool/execute directories are located. this is the default for 
# Linux and 
## Unix systems.
LOCAL_DIR = /var

##  Where is the machine-specific local config file for each host?
LOCAL_CONFIG_FILE = /exports/condor/config/htcondor/condor_config.
                                                     \$(HOSTNAME)
##  If your configuration is on a shared file system, 
## then this might be a better default
#LOCAL_CONFIG_FILE = \$(RELEASE_DIR)/etc/\$(HOSTNAME).local

##  If the local config file is not present, is it an error? 
#(WARNING: This is a potential security issue.)
REQUIRE_LOCAL_CONFIG_FILE = false

##  The normal way to do configuration with RPMs is to read all of the
##  files in a given directory that don't match a regex as 
# configuration files.
##  Config files are read in lexicographic order.
LOCAL_CONFIG_DIR = /etc/condor/config.d
#LOCAL_CONFIG_DIR_EXCLUDE_REGEXP = 
##^((\..*)|(.*~)|(#.*)|(.*\.rpmsave)|(.*\.rpmnew))$

##  Use a host-based security policy. By default CONDOR_HOST and 
##the local machine will be allowed
use SECURITY : HOST_BASED
##  To expand your condor pool beyond a single host, set ALLOW_WRITE 
## to match all of the hosts
ALLOW_WRITE = *.utp.edu.co
ALLOW_DAEMON= *.utp.edu.co
# , gsirius-cl
SOFT_UID_DOMAIN = True
#ALLOW_CLIENT = *.utp.edu.co
##  FLOCK_FROM defines the machines that grant 
## access to your pool via flocking.
#(i.e. these machines can join your pool).
#FLOCK_FROM =
##  FLOCK_TO defines the central managers that your schedd will 
## advertise itself to 
#(i.e. these pools will give matches to your schedd).
#FLOCK_TO = condor.cs.wisc.edu, cm.example.edu

##------------------------------------------------------------------
## Values set by Submit Jobs 
##------------------------------------------------------------------

UNUSED_CLAIM_TIMEOUT = 30
# Default 10 min
###################################################### JOBS POLICY

DedicatedScheduler = "DedicatedScheduler@gsirius-cm.utp.edu.co" 
STARTD_EXPRS = $(STARTD_EXPRS), DedicatedScheduler

####################################################################
####################################################################
##  Settings you should leave alone, but that must be defined
####################################################################
####################################################################

##  Path to the special version of rsh that's required to spawn MPI
##  jobs under Condor.  WARNING: This is not a replacement for rsh,
##  and does NOT work for interactive use.  Do not use it directly!
MPI_CONDOR_RSH_PATH = $(LIBEXEC)

##  Path to OpenSSH server binary
##  Condor uses this to establish a private SSH connection 
##  between execute
##machines. It is usually in /usr/sbin, but may be in /usr/local/sbin
CONDOR_SSHD = /usr/sbin/sshd

##  Path to OpenSSH keypair generator.
##  Condor uses this to establish a private SSH connection between execute
##  machines. It is usually in /usr/bin, but may be in /usr/local/bin
CONDOR_SSH_KEYGEN = /usr/bin/ssh-keygen

##  This setting puts the DedicatedScheduler attribute, defined above,
##  into your machine's classad.  This way, the dedicated scheduler
##  (and you) can identify which machines are configured as dedicated
##  resources.
STARTD_EXPRS = $(STARTD_EXPRS), DedicatedScheduler

##--------------------------------------------------------------------
## Values set by the debian patch script:
##--------------------------------------------------------------------

## For Unix machines, the path and file name of the file containing
## the pool password for password authentication.
#SEC_PASSWORD_FILE = $(LOCAL_DIR)/lib/condor/pool_password

##  Pathnames
RUN     = $(LOCAL_DIR)/run/condor
LOG     = $(LOCAL_DIR)/log/condor
LOCK    = $(LOCAL_DIR)/lock/condor
SPOOL   = $(LOCAL_DIR)/lib/condor/spool
EXECUTE = $(LOCAL_DIR)/lib/condor/execute
BIN     = $(RELEASE_DIR)/bin
LIB     = $(RELEASE_DIR)/lib/condor
INCLUDE = $(RELEASE_DIR)/include/condor
SBIN    = $(RELEASE_DIR)/sbin
LIBEXEC = $(RELEASE_DIR)/lib/condor/libexec
SHARE   = $(RELEASE_DIR)/share/condor

PROCD_ADDRESS = $(RUN)/procd_pipe

##  What machine is your central manager?

CONDOR_HOST = gsirius-cm.utp.edu.co

##  This macro determines what daemons the condor_master will 
# start and keep
# its watchful eyes on.
##  The list is a comma or space separated list of subsystem names

#DAEMON_LIST = COLLECTOR, MASTER, NEGOTIATOR, SCHEDD, STARTD

